#ifdef ESP32
#include <WiFi.h>
//#include <mDNS.h>
//#include <ESPmDNS.h>
#elif defined(ESP8266)
#include <ESP8266WiFi.h>
//#include <ESP8266mDNS.h>
#endif


// #include <WiFiUdp.h>
// #include <ArduinoOTA.h>
//#include <ArduinoJson.h>


IPAddress local_IP(192, 168, 0,98);
// Set your Gateway IP address
IPAddress gateway(192, 168, 0, 2);

IPAddress subnet(255, 255, 255, 0);







String MAC = WiFi.macAddress();

void wifiConnect(){
  WiFi.disconnect();
  WiFi.mode(WIFI_STA);
  WiFi.config(local_IP, gateway, subnet);
  WiFi.begin("ssid",  "password");
  

  
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
    
    WiFi.config(local_IP, gateway, subnet);
    WiFi.begin("ssid",  "password");  
    
    
    //if ((unsigned long)(millis() - startTime) >= 5000) break;
    
  }
      
    
  

  if (WiFi.status() == WL_CONNECTED){
   
  } else {
      
  }
  Serial.println("");
  // WiFi.printDiag(Serial);
}



unsigned long previousMilliss = 0;
unsigned long interval = 30000;
void wifisetup(){
  // SPIFFS.begin();
  
  delay(200);
  MAC.remove(2, 1);MAC.remove(4, 1);MAC.remove(6, 1);MAC.remove(8, 1);MAC.remove(10, 1);
  MAC = "esp32"+MAC;
  Serial.println(MAC);
  wifiConnect();
}
unsigned long startTimeap = 0;
void wifiloop(){
    // if (WiFi.status() == WL_CONNECTED){
    //     // ArduinoOTA.handle();
    // }
    // if ((millis() - startTimeap) >= 60000 && startTimeap != 0){
    //     ESP.restart();
    // }

  unsigned long currentMilliss = millis();
  // if WiFi is down, try reconnecting every CHECK_WIFI_TIME seconds
  if ((WiFi.status() != WL_CONNECTED) && (currentMilliss - previousMilliss >=interval)) {
    Serial.print(millis());
    Serial.println("Reconnecting to WiFi...");
    WiFi.disconnect();
    WiFi.reconnect();
    previousMilliss = currentMilliss;
  }
}

